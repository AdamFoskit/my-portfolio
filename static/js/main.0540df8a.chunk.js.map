{"version":3,"sources":["components/Navbar.js","components/Particles.js","contents/About.js","contents/Footer.js","contents/Home.js","contents/Skills.js","App.js","serviceWorker.js","index.js","images/Pro_Square.jpg"],"names":["Navbar","className","color","activeClass","to","spy","smooth","offset","duration","Particles","id","options","background","value","fpsLimit","interactivity","detectsOn","events","onHover","enable","mode","resize","modes","bubble","distance","opacity","size","push","quantity","repulse","particles","links","width","move","direction","outMode","random","speed","straight","number","shape","type","detectRetina","About","style","display","Footer","href","Home","class","alt","src","ProfilePicture","text","eraseDelay","typingDelay","Skills","App","name","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.0540df8a.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-scroll';\nimport './Navbar.css'\nconst Navbar = () => {\n  return (\n\n        <nav className=\"my-navbar\">\n            <Link color={'#e7e7e7'} activeClass=\"active\" to=\"home\" spy={true} smooth={true} offset={0} duration={350}>Home</Link>\n            <Link color={'#e7e7e7'} activeClass=\"active\" to=\"about\" spy={true} smooth={true} offset={0} duration={350}>About</Link>\n            <Link color={'#e7e7e7'} activeClass=\"active\" to=\"skills\" spy={true} smooth={true} offset={-50} duration={350}>Skills</Link>\n        </nav>\n  );\n};\n\nexport default Navbar;","import React from 'react'\nimport * as TSParticles from \"react-tsparticles\";\nexport default function Particles() {\n    return <TSParticles\n    id=\"tsparticles\"\n        options={{\n          background: {\n            color: {\n              value: \"#000000\",\n            },\n          },\n          fpsLimit: 120,\n          interactivity: {\n            detectsOn: \"window\",\n            events: {\n              onHover: {\n                enable: true,\n                mode: \"repulse\",\n              },\n              resize: true,\n            },\n            modes: {\n              bubble: {\n                distance: 400,\n                duration: 2,\n                opacity: 0.8,\n                size: 40,\n              },\n              push: {\n                quantity: 3,\n              },\n              repulse: {\n                distance: 275,\n                duration: 0.15,\n              },\n            },\n          },\n          particles: {\n            color: {\n              value: \"#f2f2f2\",\n            },\n            links: {\n              color: \"#15cdfc\",\n              distance: 150,\n              enable: true,\n              opacity: 0.5,\n              width: 1,\n            },\n            move: {\n              direction: \"none\",\n              enable: true,\n              outMode: \"bounce\",\n              random: false,\n              speed: 2,\n              straight: false,\n            },\n            number: {\n              value: 250,\n            },\n            opacity: {\n              value: 0.7,\n            },\n            shape: {\n              type: \"circle\",\n            },\n            size: {\n              random: true,\n              value: 4,\n            },\n          },\n          detectRetina: true,\n        }}\n      />\n}","import React from 'react'\r\nimport './About.css'\r\nfunction About() {\r\n    return (\r\n        <div className=\"section\" >\r\n            <h1>About Me</h1>\r\n            <span>\r\n                <h3>\r\n                    Full Stack Software Engineer | <u>Computer Science </u>\r\n                    Major\r\n                </h3>\r\n            </span>\r\n            <br></br>\r\n            <p className=\"about\" style={{ display: 'inline-block', width: '75vw', }}>\r\n                Iâ€™m a 24 year old Software Engineer that graduated from college\r\n                in May 2020 with a Bachelor of Science in Computer Science. I\r\n                have a strong passion for Software Development and love learning\r\n                new technologies. I have over 1 year of professional experience\r\n                in Software Development. Currently, my favorite programming language is JavaScript because I love the idea of cross-platform development, and there are so many web development tools like React, React Native, and Electron to build web, mobile, and desktop applications using the same language! I have had the opportunity to be a major contributor and leader of several core application features such as real-time messaging, geolocation, Google Authentication, custom-made Authorization, tournament bracket integration with a third-party API, image and video upload to AWS S3, setup of an AWS CDN, and working with AWS MediaLive for live streaming events. I also like spending time reading the most\r\n                up-to-date technologies and frameworks, and benchmarking\r\n                different solutions to tough problems.\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\nexport default About\r\n","import React from 'react'\r\nimport './Footer.css'\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\" >\r\n            <a href={\"tel:+18322218026\"}>(832) 221-8026</a>\r\n            <a href={`mailto: ${'adamfoskit@gmail.com'}`}>Email Me</a>\r\n            <a href={`https://github.com/AdamFoskit`}>Github</a>\r\n            <a href={`https://linkedin.com/in/adamfoskit`}>Connect on LinkedIn</a>\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Footer\r\n","import React from 'react'\r\nimport ReactTypingEffect from 'react-typing-effect'\r\nimport ProfilePicture from '../images/Pro_Square.jpg'\r\nimport './Home.css'\r\nfunction Home() {\r\n    return (\r\n        <div className=\"section\" >\r\n        <div id=\"dust\"></div>\r\n            <div class=\"title\">\r\n             <h1> \r\n             <img\r\n                    className='avatar'\r\n                    alt={'Adam Foskit'}\r\n                    src={ProfilePicture}\r\n                />\r\n                <div>\r\n                <h1>Adam Foskit</h1>\r\n                </div>\r\n                <div>Software Developer</div>\r\n            </h1>\r\n            <p>Full Stack Developer with experience working in/with</p>\r\n            <p><ReactTypingEffect\r\n                    text={['React.', 'JavaScript.', 'React Native.', 'GraphQL.', 'RESTful APIs.', 'Node.js.', 'Express.js.']}\r\n                    className='typingeffect'\r\n                    speed={75}\r\n                    eraseDelay={250}\r\n                    typingDelay={50}\r\n            />\r\n            </p>\r\n            \r\n            </div> \r\n        </div>\r\n    )\r\n}\r\nexport default Home\r\n","import React from 'react'\r\nimport './Skills.css'\r\nfunction Skills() {\r\n    return (\r\n        <div className=\"section\" >\r\n            <h1>My Skills</h1>\r\n            <div className=\"skills\">\r\n                <div>\r\n                    <h4>Front End</h4>\r\n                    <span>React Context</span>\r\n                    <span>Apollo Client</span>\r\n                    <span>React Native</span>\r\n                    <span>React Hooks</span>\r\n                    <span>HTML5</span>\r\n                    <span>CSS3</span>\r\n                </div>\r\n                <div>\r\n                    <h4>Back End</h4>\r\n                    <span>Node.js</span>\r\n                    <span>MongoDB (NoSQL)</span>\r\n                    <span>GraphQL (Apollo Server)</span>\r\n                    <span>RESTful APIs</span>\r\n                    <span>MySQL</span>\r\n                    <span>Amazon Web Services (S3, EC2)</span>\r\n                </div>\r\n                <div>\r\n                    <h4>Other</h4>\r\n                    <span>C++</span>\r\n                    <span>Java</span>\r\n                    <span>Teamwork</span>\r\n                    <span>Git</span>\r\n                    <span>Communication</span>\r\n                    <span>Hardworking</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Skills\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Header from './components/Navbar'\r\nimport Particles from './components/Particles'\r\nimport About from './contents/About'\r\nimport Footer from './contents/Footer'\r\nimport Home from './contents/Home'\r\nimport Skills from './contents/Skills'\r\nimport { Element } from 'react-scroll';\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <Particles />\r\n            <Header />\r\n            <Element name=\"home\"><Home /></Element>\r\n            <Element name=\"about\"><About /></Element>\r\n            <Element name=\"skills\"><Skills /></Element>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","module.exports = __webpack_public_path__ + \"static/media/Pro_Square.cc68a54c.jpg\";"],"sourceRoot":""}